"""init

Revision ID: 4de8c9fe9f0f
Revises: 
Create Date: 2024-06-27 00:59:29.806874

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4de8c9fe9f0f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('areas',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employers',
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('alternate_url', sa.String(), nullable=True),
    sa.Column('vacancies_url', sa.String(), nullable=True),
    sa.Column('accredited_it_employer', sa.Boolean(), nullable=True),
    sa.Column('trusted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('employments',
    sa.Column('id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('experiences',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('salaries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('salary_from', sa.Float(), nullable=True),
    sa.Column('salary_to', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('gross', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedules',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('types',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('vacancies',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('accept_handicapped', sa.Boolean(), nullable=True),
    sa.Column('accept_incomplete_resumes', sa.Boolean(), nullable=True),
    sa.Column('accept_kids', sa.Boolean(), nullable=True),
    sa.Column('accept_temporary', sa.Boolean(), nullable=True),
    sa.Column('allow_messages', sa.Boolean(), nullable=True),
    sa.Column('alternate_url', sa.String(), nullable=True),
    sa.Column('apply_alternate_url', sa.String(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('has_test', sa.Boolean(), nullable=True),
    sa.Column('premium', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('response_letter_required', sa.Boolean(), nullable=True),
    sa.Column('response_url', sa.String(), nullable=True),
    sa.Column('sort_point_distance', sa.String(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('show_logo_in_search', sa.Boolean(), nullable=True),
    sa.Column('area_id', sa.String(), nullable=True),
    sa.Column('type_id', sa.String(), nullable=True),
    sa.Column('employment_name', sa.String(), nullable=True),
    sa.Column('schedule_id', sa.String(), nullable=True),
    sa.Column('experience_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.ForeignKeyConstraint(['employment_name'], ['employments.name'], ),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('snippets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('requirement', sa.String(), nullable=True),
    sa.Column('responsibility', sa.String(), nullable=True),
    sa.Column('vacancy_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vacancy_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('snippets')
    op.drop_table('vacancies')
    op.drop_table('user')
    op.drop_table('types')
    op.drop_table('schedules')
    op.drop_table('salaries')
    op.drop_table('experiences')
    op.drop_table('employments')
    op.drop_table('employers')
    op.drop_table('areas')
    # ### end Alembic commands ###
